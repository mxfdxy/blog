<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.5.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-08-30T10:29:56+08:00</updated><id>http://localhost:4000/</id><title type="html">Your awesome title</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</subtitle><entry><title type="html">使用github作为博客引擎</title><link href="http://localhost:4000/tech/2017/08/30/welcome-to-jekyll.html" rel="alternate" type="text/html" title="使用github作为博客引擎" /><published>2017-08-30T00:00:00+08:00</published><updated>2017-08-30T00:00:00+08:00</updated><id>http://localhost:4000/tech/2017/08/30/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/tech/2017/08/30/welcome-to-jekyll.html">&lt;p&gt;在介绍之前，先普及一下基础知识，大鸟们直接跳过。&lt;/p&gt;

&lt;h3 id=&quot;什么是git&quot;&gt;什么是git&lt;/h3&gt;

&lt;p&gt;git是一个分布式版本控制工具(DVCS)，不需要服务端软件支持(即使在地铁里也可以正常commit)，Linux内核开发用的版本控制工具就是它。&lt;/p&gt;

&lt;p&gt;常用的SVN属于集中式版本控制工具(CVCS)，需要在服务端开启SVN服务，然后客户端checkout,commit,update。&lt;/p&gt;

&lt;p&gt;更详细的介绍请参考&lt;a href=&quot;http://en.wikipedia.org/wiki/Git_(software)&quot;&gt;维基百科&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;什么是github&quot;&gt;什么是github&lt;/h3&gt;

&lt;p&gt;“github”:http://github.com/ 的标语是：”secure source code hosting and collaborative development”。一个基于git的类似google code的代码仓库，付费版的用户可以创建私有仓库，支持多人开发。很多项目都选择了github来保存代码，如”jQuery/reddit/RoR/CakePHP/Redis”等等。&lt;/p&gt;

&lt;h3 id=&quot;github-pages&quot;&gt;github pages&lt;/h3&gt;

&lt;p&gt;先说说pages功能，blog就是在pages的基础上搭建的。如果英文不错的话，可以直接&lt;a href=&quot;http://pages.github.com/&quot;&gt;浏览此页&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;创建一个用户的页面很简单，假设你的用户名为foo&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;新建一个仓库(repository)，名称填”foo.github.com”，创建&lt;/li&gt;
  &lt;li&gt;在本地新建一个文件夹，假如为foo,在foo里面新建一个index.html页面，随便输入点内容&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git init&lt;/code&gt; 初始化，&lt;code class=&quot;highlighter-rouge&quot;&gt;git add .&lt;/code&gt; 把index.html加入到仓库中，&lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt; 提交修改&lt;/li&gt;
  &lt;li&gt;添加github的分支 &lt;code class=&quot;highlighter-rouge&quot;&gt;git remote add origin git@github.com:foo/foo.github.com.git&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;提交到github分支 &lt;code class=&quot;highlighter-rouge&quot;&gt;git push origin master&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;过1分钟左右，浏览foo.github.com，就可以看到刚刚创建的index.html文件了。&lt;/p&gt;

&lt;p&gt;除了创建用户页面，还可以针对每个项目单独创建项目的主页，这不是本文的重点，有兴趣的可以&lt;a href=&quot;http://pages.github.com/&quot;&gt;浏览此页&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;创建blog&quot;&gt;创建blog&lt;/h3&gt;

&lt;p&gt;终于扯到正题上了(-,-)，前面已经说过如何创建html页面，其实已经可以写博客了，创建一个index.html页面，在里面列出写过的文章，点击标题进去后又是一个手动创建的html页。就是太麻烦了，一点都不酷，说不定还会被MM鄙视。&lt;/p&gt;

&lt;p&gt;github当然知道这个问题，所以他们创建了&lt;a href=&quot;http://github.com/mojombo/jekyll&quot;&gt;jekyll模板引擎&lt;/a&gt; 。简单来说，就是你可以用&lt;a href=&quot;http://www.textism.com/tools/textile/?sample=2&quot;&gt;textile&lt;/a&gt; 或者&lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax&quot;&gt;markdown&lt;/a&gt;语法来写博客，提交到github后，会自动转换成html。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://wiki.github.com/mojombo/jekyll/sites&quot;&gt;这里&lt;/a&gt;有很多网站/博客，都是基于github的jekyll模板开发的，如果觉得哪个不错，可以查看source。&lt;/p&gt;

&lt;p&gt;先来看看&lt;a href=&quot;http://github.com/mojombo/mojombo.github.com&quot;&gt;这个仓库&lt;/a&gt;，里面有一些特殊的文件/文件夹：&lt;/p&gt;

&lt;h3 id=&quot;_configyml&quot;&gt;_config.yml&lt;/h3&gt;

&lt;p&gt;存储了一些设置，大部分的设置都可以通过命令行指定，但放到配置文件里更方便些&lt;/p&gt;

&lt;h4 id=&quot;_layouts&quot;&gt;_layouts&lt;/h4&gt;

&lt;p&gt;_layouts文件夹存放的是模板文件，文章会被渲染到这些模板里，变量指代的是文章内容&lt;/p&gt;

&lt;h4 id=&quot;_posts&quot;&gt;_posts&lt;/h4&gt;

&lt;p&gt;这里就是真正存放博客文章的地方了，文件命名要遵守这种格式:year-month-day-title.markup&lt;/p&gt;

&lt;h4 id=&quot;_site&quot;&gt;_site&lt;/h4&gt;

&lt;p&gt;这个文件夹是程序生成的，如果本地没有安装jekyll的话，是不会有这个文件夹的，如果想要先本地预览一下，再提交到github，最好通过.gitignore把这个文件夹排除。&lt;/p&gt;

&lt;h4 id=&quot;indexhtml&quot;&gt;index.html&lt;/h4&gt;

&lt;p&gt;这个文件也有一个&lt;a href=&quot;http://wiki.github.com/mojombo/jekyll/yaml-front-matter&quot;&gt;yaml前缀&lt;/a&gt; ，可以指定使用哪个模板，标题等等，所有根文件夹下的.html/.htm/.textile/.markdown都会被解析。&lt;/p&gt;

&lt;h4 id=&quot;other-filesfolders&quot;&gt;other files/folders&lt;/h4&gt;

&lt;p&gt;上面没有列出的文件/文件夹都会被jekyll放到_site文件夹下，如css/image/script等等。&lt;/p&gt;

&lt;h3 id=&quot;jekyll的安装&quot;&gt;jekyll的安装&lt;/h3&gt;

&lt;p&gt;参考&lt;a href=&quot;http://wiki.github.com/mojombo/jekyll/install&quot;&gt;安装页&lt;/a&gt; ，如果使用时提示”liquid requires RubyGems version &amp;gt;= 1.3.7”，可以在&lt;a href=&quot;http://rubyforge.org/frs/?group_id=126&quot;&gt;这里&lt;/a&gt; 下载对应的文件，安装即可。&lt;/p&gt;

&lt;p&gt;安装完之后，为了避免路径调用问题，可以在apache/nginx里给对应的文件夹(/path/to/_site)绑定一个本地域名，如”lc.foo.github.com”，在终端里输入”jekyll –pygments”，然后就可以用该域名访问本地博客了，如果一切正常，再提交到github&lt;/p&gt;

&lt;p&gt;PS:如果你之前的博客是基于wordpress/movable type/typo 4+，可以参考这篇&lt;a href=&quot;http://wiki.github.com/mojombo/jekyll/blog-migrations&quot;&gt;迁移指南&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;绑定域名&quot;&gt;绑定域名&lt;/h3&gt;

&lt;p&gt;这个就更简单了，新建一个CNAME文本文件，在里面输入域名，如”blog.leezhong.com”，然后在域名提供商里，指定该域名的CNAME为”foo.github.com”，搞定&lt;/p&gt;

&lt;h3 id=&quot;添加评论功能&quot;&gt;添加评论功能&lt;/h3&gt;

&lt;p&gt;使用&lt;a href=&quot;http://disqus.com&quot;&gt;disqus&lt;/a&gt; ，整个注册和使用流程还是挺清晰易懂的，这里就不多说了。&lt;/p&gt;

&lt;h3 id=&quot;参考文章&quot;&gt;参考文章&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;“jekyll wiki”: &lt;a href=&quot;http://wiki.github.com/mojombo/jekyll/&quot;&gt;http://wiki.github.com/mojombo/jekyll/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;“github blog”: &lt;a href=&quot;http://github.com/blog/272-github-pages&quot;&gt;http://github.com/blog/272-github-pages&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;“publishing a blog with github and jekyll”: &lt;a href=&quot;http://blog.envylabs.com/2009/08/publishing-a-blog-with-github-pages-and-jekyll&quot;&gt;http://blog.envylabs.com/2009/08/publishing-a-blog-with-github-pages-and-jekyll/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;后记&quot;&gt;后记&lt;/h3&gt;

&lt;p&gt;之前一直用的wordpress，但是太臃肿了，而且有安全隐患，还得有一个PHP空间，访问速度也得不到保证。平时github用得比较多，正好他们提供”博客”服务，正合我意，初步使用下来，没有什么问题，能在本地用vim写textile语法的博客是一件多么爽的事情啊，还可以本地预览最终效果，数据也不会轻易丢失。&lt;/p&gt;

&lt;p&gt;最后再次感谢github提供了这么好的服务，如果对github的创业历程感兴趣，可以参考&lt;a href=&quot;http://tom.preston-werner.com/2008/10/18/how-i-turned-down-300k.html&quot;&gt;这篇文章&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="tech" /><category term="技术" /><summary type="html">在介绍之前，先普及一下基础知识，大鸟们直接跳过。</summary></entry></feed>